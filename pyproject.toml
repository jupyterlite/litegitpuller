[build-system]
requires = [
  "hatchling>=1.10.0",
  "jupyterlab>=3.5,<3.6",
]
build-backend = "hatchling.build"

[project]
name = "litegitpuller"
description = "A jupyterlite extension to automatise the clone of github repository."
readme = "README.md"
authors = [
  { name = "Jupyter Development Team", email = "jupyter@googlegroups.com" },
]
dependencies = [
  "jupyterlite"
]
version = "0.0.1.dev0"

[project.optional-dependencies]
dev = [
  "jupyterlab>=3.5,<3.6",
  "tbump",
  "toml"
]

[project.urls]
Homepage = "https://github.com/jupyterlite/litegitpuller"

[tool.hatch.build]
artifacts = [
  "litegitpuller/labextension/"
]

[tool.hatch.build.targets.wheel.shared-data]
"litegitpuller/labextension" = "share/jupyter/labextensions/@jupyterlite/litegitpuller"

[tool.hatch.build.hooks.jupyter-builder]
dependencies = [
  "hatch-jupyter-builder>=0.7",
]
build-function = "hatch_jupyter_builder.npm_builder"
ensured-targets = [
  "litegitpuller/labextension/static/style.js",
  "litegitpuller/labextension/package.json",
]
skip-if-exists = [
  "litegitpuller/labextension/static/style.js",
]

[tool.hatch.build.hooks.jupyter-builder.editable-build-kwargs]
build_dir = "litegitpuller/labextension"
source_dir = "src"
build_cmd = "install:labextension"
npm = [
  "jlpm",
]

[tool.hatch.build.hooks.jupyter-builder.build-kwargs]
build_cmd = "build:prod"
npm = [
  "jlpm",
]

# autoflake is used for autoformatting Python code
#
# ref: https://github.com/PyCQA/autoflake#readme
#
[tool.autoflake]
ignore-init-module-imports = true
remove-all-unused-imports = true
remove-duplicate-keys = true
#remove-unused-variables = true


# isort is used for autoformatting Python code
#
# ref: https://pycqa.github.io/isort/
#
[tool.isort]
profile = "black"


# black is used for autoformatting Python code
#
# ref: https://black.readthedocs.io/en/stable/
#
[tool.black]
skip-string-normalization = true
# target-version should be all supported versions, see
# https://github.com/psf/black/issues/751#issuecomment-473066811
target_version = [
  "py37",
  "py38",
  "py39",
  "py310",
  "py311",
]

# tbump is used to simplify and standardize the release process when updating
# the version, making a git commit and tag, and pushing changes.
#
# ref: https://github.com/your-tools/tbump#readme
#
[tool.tbump]
github_url = "https://github.com/jupyterlite/litegitpuller"

[tool.tbump.version]
current = "0.0.1.dev.0"
regex = '''
  (?P<major>\d+)
  \.
  (?P<minor>\d+)
  \.
  (?P<patch>\d+)
  (?P<pre>((a|b|rc)\d+)|)
  \.?
  (?P<dev>(?<=\.)dev\d*|)
'''

[[tool.tbump.file]]
src = "pyproject.toml"

[tool.tbump.git]
message_template = "Bump to {new_version}"
tag_template = "{new_version}"

[[tool.tbump.file]]
src = "litegitpuller/version.py"

[[tool.tbump.file]]
src = "setup.py"
